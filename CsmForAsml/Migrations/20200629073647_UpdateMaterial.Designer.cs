// <auto-generated />
using System;
using CsmForAsml.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CsmForAsml.Migrations
{
    [DbContext(typeof(CsmForAsml2Context))]
    [Migration("20200629073647_UpdateMaterial")]
    partial class UpdateMaterial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CsmForAsml.Models.CalDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CalDate1")
                        .HasColumnName("Cal Date")
                        .HasColumnType("date");

                    b.Property<string>("CalStatus")
                        .HasColumnName("Cal Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCal")
                        .HasColumnType("bit");

                    b.Property<string>("PdfFileName")
                        .HasColumnName("PDF File Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("CalDate");
                });

            modelBuilder.Entity("CsmForAsml.Models.CalInProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CalDate")
                        .HasColumnName("Cal_Date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("CalResult")
                        .HasColumnName("Cal_Result")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CcReceiveDate")
                        .HasColumnName("CC_Receive_Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CcUploadDate")
                        .HasColumnName("CC_Upload_Date")
                        .HasColumnType("datetime");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PlanedShipDate")
                        .HasColumnName("Planed_ShipDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<DateTime?>("RegisteredDate")
                        .HasColumnName("Registered_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnName("Serial_Number")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("StdTat")
                        .HasColumnType("int");

                    b.Property<int?>("Tat")
                        .HasColumnName("TAT")
                        .HasColumnType("int");

                    b.Property<string>("TatStatus")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UserReceiveDate")
                        .HasColumnName("User_Receive_Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UserShipDate")
                        .HasColumnName("User_Ship_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("VenComment")
                        .HasColumnName("Ven_Comment")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("VenReceiveDate")
                        .HasColumnName("Ven_Receive_Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("VenShipDate")
                        .HasColumnName("Ven_ShipDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("CalInProcess");
                });

            modelBuilder.Entity("CsmForAsml.Models.CalInProcessBU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CalDate")
                        .HasColumnName("Cal_Date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("CalResult")
                        .HasColumnName("Cal_Result")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CcReceiveDate")
                        .HasColumnName("CC_Receive_Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CcUploadDate")
                        .HasColumnName("CC_Upload_Date")
                        .HasColumnType("datetime");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PlanedShipDate")
                        .HasColumnName("Planed_ShipDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<DateTime?>("RegisteredDate")
                        .HasColumnName("Registered_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnName("Serial_Number")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("StdTat")
                        .HasColumnType("int");

                    b.Property<int?>("Tat")
                        .HasColumnName("TAT")
                        .HasColumnType("int");

                    b.Property<string>("TatStatus")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UserReceiveDate")
                        .HasColumnName("User_Receive_Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UserShipDate")
                        .HasColumnName("User_Ship_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("VenComment")
                        .HasColumnName("Ven_Comment")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("VenReceiveDate")
                        .HasColumnName("Ven_Receive_Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("VenShipDate")
                        .HasColumnName("Ven_ShipDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("CalInProcessBackup");
                });

            modelBuilder.Entity("CsmForAsml.Models.HolidayEntry", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("HolidayName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Date")
                        .HasName("PK_dbo.Holidays");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("CsmForAsml.Models.Location", b =>
                {
                    b.Property<string>("Plant")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Location1")
                        .HasColumnName("Location")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Plant")
                        .HasName("PK_dbo.Location");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("CsmForAsml.Models.MaterialNeedCal", b =>
                {
                    b.Property<string>("Material")
                        .HasColumnType("varchar(16)")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<string>("AddRemove")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("CalInterval")
                        .HasColumnName("Cal Interval")
                        .HasColumnType("int");

                    b.Property<string>("CalPlace")
                        .HasColumnName("Cal Place")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("CalVendor")
                        .HasColumnName("Cal Vendor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("date");

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("MaterialDescription")
                        .HasColumnName("Material Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<bool?>("NeedCal")
                        .HasColumnType("bit");

                    b.Property<bool?>("NeedSafety")
                        .HasColumnType("bit");

                    b.Property<string>("PMaker")
                        .HasColumnName("P.Maker")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PModel")
                        .HasColumnName("P.Model")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PName")
                        .HasColumnName("P.Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("PriceFromVendor")
                        .HasColumnType("money");

                    b.Property<decimal?>("PriceToUser")
                        .HasColumnType("money");

                    b.Property<int?>("SafetyInterval")
                        .HasColumnName("Safety Interval")
                        .HasColumnType("int");

                    b.HasKey("Material")
                        .HasName("PK_dbo.MaterialNeedCal");

                    b.ToTable("MaterialNeedCal");
                });

            modelBuilder.Entity("CsmForAsml.Models.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ContextKey")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<byte[]>("Model")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("MigrationId", "ContextKey")
                        .HasName("PK_dbo.__MigrationHistory");

                    b.ToTable("__MigrationHistory");
                });

            modelBuilder.Entity("CsmForAsml.Models.Tat", b =>
                {
                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("AveTat")
                        .HasColumnName("Ave_TAT")
                        .HasColumnType("int");

                    b.Property<int?>("MaxTat")
                        .HasColumnName("Max_TAT")
                        .HasColumnType("int");

                    b.Property<int?>("MinTat")
                        .HasColumnName("Min_TAT")
                        .HasColumnType("int");

                    b.Property<int>("NumActual")
                        .HasColumnName("Num_Actual")
                        .HasColumnType("int");

                    b.Property<decimal?>("PriceFromVendor")
                        .HasColumnType("money");

                    b.Property<decimal?>("PriceToUser")
                        .HasColumnType("money");

                    b.Property<int?>("SquareSumTat")
                        .HasColumnName("SquareSum_TAT")
                        .HasColumnType("int");

                    b.Property<double?>("StdDevTat")
                        .HasColumnName("StdDev_TAT")
                        .HasColumnType("float");

                    b.Property<int>("StdTat")
                        .HasColumnName("Std_TAT")
                        .HasColumnType("int");

                    b.Property<int?>("SumTat")
                        .HasColumnName("Sum_TAT")
                        .HasColumnType("int");

                    b.HasKey("Material")
                        .HasName("PK_dbo.TAT");

                    b.ToTable("TAT");
                });

            modelBuilder.Entity("CsmForAsml.Models.ToolInventory", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnName("Serial Number")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CalDue")
                        .HasColumnName("Cal Due")
                        .HasColumnType("date");

                    b.Property<string>("CalStatus")
                        .HasColumnName("Cal Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<bool?>("InCal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LatestCalDate")
                        .HasColumnName("Latest Cal Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LatestSafetyDate")
                        .HasColumnName("Latest Safety Date")
                        .HasColumnType("date");

                    b.Property<string>("Machine")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Material")
                        .HasColumnType("varchar(16)")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<bool?>("NeedCal")
                        .HasColumnType("bit");

                    b.Property<bool?>("NeedSafety")
                        .HasColumnType("bit");

                    b.Property<string>("PSN")
                        .HasColumnName("P.S/N")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Plant")
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovedDate")
                        .HasColumnName("Removed Date")
                        .HasColumnType("date");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<DateTime?>("SafetyDue")
                        .HasColumnName("Safety Due")
                        .HasColumnType("date");

                    b.Property<string>("SortField")
                        .HasColumnName("Sort field")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StoreLocation")
                        .HasColumnName("Store Location")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SuperordEquip")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("SystemStatus")
                        .HasColumnName("System status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ToolkitMachine")
                        .HasColumnName("Toolkit Machine")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ToolkitSloc")
                        .HasColumnName("Toolkit sloc")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("Updated Date")
                        .HasColumnType("date");

                    b.Property<string>("UserStatus")
                        .HasColumnName("User status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SerialNumber")
                        .HasName("PK_dbo.ToolInventory");

                    b.ToTable("ToolInventory");
                });
#pragma warning restore 612, 618
        }
    }
}
